service: code-prodigy

plugins:
  - serverless-python-requirements  # Python only

custom:
  foo: bar
  pythonRequirements: # Python only
    usePipenv: true
    dockerizePip: true
    dockerImage: lambci/lambda:build-python3.6
    dockerSsh: true
    slim: true

provider:
  name: aws
  stage: ${opt:stage}
  region: ${opt:region}
  logRetentionInDays: 7
  stackTags:
    SERVICE: ${self:service}
  environment:
    FOO_VALUE: ${self:custom.foo}

functions:
  PutProduct:
    description: Creates and updates products
    memorySize: 128
    runtime: python3.6
    handler: handlers.put_product__http
    events:
      -
        http:
          method: put
          path: "/product/{name}"
          request:
            parameters:
              paths:
                name: true

# resources:
#   Resources:
#     ProductDynamoDBTable:
#       Type: "AWS::DynamoDB::Table"
#       Properties:
#         AttributeDefinitions:
#           -
#             AttributeName: name
#             AttributeType: S
#         KeySchema:
#           -
#             AttributeName: name
#             KeyType: HASH
#         TableName: ${self:custom.product_table_name}
#         ProvisionedThroughput:
#           ReadCapacityUnits: 1
#           WriteCapacityUnits: 1
